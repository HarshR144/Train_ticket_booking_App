/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.UserBookingService;
import ticket.booking.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;

public class App {
    public static void main(String[] args) {
        System.out.println("Running Train booking system");
        Scanner scanner = new Scanner(System.in);
        int option = 0;
        UserBookingService userBookingService;
        try{
            userBookingService = new UserBookingService();
        }catch(IOException e){
            System.out.println("SOmething went wrong");
            e.printStackTrace();
            return;
        }
        Train trainSelected =  new Train();

        String source = "";
        String destination = "";
        while(option != 7){
            System.out.println("Choose option");
            System.out.println("1. Signup");
            System.out.println("2. Login");
            System.out.println("3. Fetch Bookings");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a seat");
            System.out.println("6. Cancel Booking");
            System.out.println("7. Exit App");

            option = scanner.nextInt();
            switch (option){
                case 1:
                    System.out.println("Signup");
                    System.out.println("Enter UserName:");
                    String nameToSignup = scanner.next();
                    System.out.println("Enter Password:");
                    String passwordToSignup = scanner.next();
                    User userToSignup = new User(
                            nameToSignup,
                            passwordToSignup,
                            UserServiceUtil.hashPassword(passwordToSignup),
                            new ArrayList<>(), UUID.randomUUID().toString()
                    );
                    userBookingService.signUp(userToSignup);
                    break;

                case 2:
                    System.out.println("Login");
                    System.out.println("Enter UserName:");
                    String nameToLogin = scanner.next();
                    System.out.println("Enter Password:");
                    String passwordToLogin = scanner.next();
                    User userToLogin = new User(
                            nameToLogin,
                            passwordToLogin,
                            UserServiceUtil.hashPassword(passwordToLogin),
                            new ArrayList<>(), UUID.randomUUID().toString()
                    );
                    try {
                        userBookingService = new UserBookingService(userToLogin);
                        userBookingService.loginUser();
                    } catch (IOException e) {
                        System.out.println("Something went wrong");
                        return;
                    }
                    break;


                case 3:
                    System.out.println("Fetching your Bookings");
                    userBookingService.fetchBooking();
                    break;
                case 4:
                    System.out.println("Type source station:");
                    source = scanner.next();
                    System.out.println("Type destination station:");
                    destination = scanner.next();
                    List<Train> trains = userBookingService.getTrains(source, destination);
                    int index = 1;
                    for(Train t: trains){
                        System.out.println(index + "Train id: " + t.getTrainId() );
                        for(Map.Entry<String, String> entry: t.getStationTimes().entrySet() ){
                            System.out.println("Station " + entry.getKey() + " time: " + entry.getValue());
                        }

                    }
                    System.out.println("Select train by typing 1, 2, 3 ....");
                    trainSelected = trains.get(scanner.nextInt());
                    break;

                case 5:
                    System.out.println("Select a seat for booking");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelected);
                    for(List<Integer> row: seats){
                        for (Integer seat: row ){
                            System.out.print(seat + " ");
                        }
                        System.out.println();
                    }
                    System.out.println("Select the seat by typing the row and column");
                    System.out.println("Enter the row");
                    int row = scanner.nextInt();
                    System.out.println("Enter the column");
                    int col = scanner.nextInt();
                    System.out.println("Booking your seat....");
                    Boolean booked = userBookingService.bookTrainSeat(trainSelected, row, col);
                    if(booked.equals(Boolean.TRUE)){
                        System.out.println("Booked! Enjoy your journey");
                        userBookingService.saveTicket(trainSelected, source, destination);

                    }else{
                        System.out.println("Can't book this seat");
                    }
                    break;
                case 6:
                    System.out.println("Enter Ticket Id:");
                    String ticketId = scanner.next();
                    Boolean cancelResult = userBookingService.cancelBooking(ticketId);
                    if(cancelResult.equals(Boolean.TRUE)){
                        System.out.println("Cancelation success");
                    }
                    else{
                        System.out.println("Failed to cancel ticket");
                    }
                    break;
                default:
                    break;
            }
        }
    }
}
